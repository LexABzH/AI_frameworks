name: Build & Tests - NLP
on:
  push:
    branches:
      - 'main'
      - 'release/v*'
    paths-ignore:
      - 'version.txt'
      - '.github/workflows/**'
      - '*.md'
      - 'LICENSE'
      - 'Makefile'
  pull_request:
    types: [opened, reopened, edit, synchronize]
    branches:
      - 'main'
      - 'release/v*'
    paths-ignore:
      - 'version.txt'
      - '.github/workflows/**'
      - '*.md'
      - 'LICENSE'
      - 'Makefile'
  schedule:
    - cron: '0 0 * * 0'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.7", "3.8"]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install wheel
          python setup.py sdist bdist_wheel
          cd dist
          whl_files=( *.whl )
          whl_file=${whl_files[0]}
          pip install $whl_file
      - name: Tests predict
        run: |
          # Create a new temporary project
          cd gabarit/template_nlp
          python generate_nlp_project.py -n project_toto -p project_toto
          # Copy data
          cp nlp_data/mono_class_multi_label.csv project_toto/project_toto-data/mono_class_multi_label.csv
          # Init project
          cd project_toto
          make create-virtualenv
          source venv_project_toto/bin/activate
          make init-local-env
          # Train a model
          cd project_toto-scripts
          python 2_training.py -f mono_class_multi_label.csv -x x_col -y y_col_1 y_col_2
          # Retrieve model name
          cd ../project_toto-models
          cd $(ls | grep model | head -1)
          model_name=$(ls | grep model | head -1)
          model_name=${model_name::-1}
          # Predict
          cd ../../project_toto-scripts
          python 3_predict.py -f mono_class_multi_label.csv -x x_col -y y_col_1 y_col_2 -m $model_name
